{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\React Course\\\\newsapp\\\\src\\\\Components\\\\News.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// // import React, { useEffect, useState } from 'react'\n\n// // import NewsItem from './NewsItem'\n// // import Spinner from './spinner';\n// // import PropTypes from 'prop-types'\n// // import InfiniteScroll from \"react-infinite-scroll-component\";\n\n// // const News = (props)=> {\n// // const [articles, setArticles] = useState([])\n// // const [loading, setLoading] = useState(true)\n// // const [page, setPage] = useState(1)\n// // const [totalResults, setTotalResults] = useState(0)\n// // // document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\n\n// // const  capitalizeFirstLetter=(string)=>{\n// // return string.charAt(0).toUpperCase() + string.slice(1);\n// //   }\n\n// // const Updatenews = async ()=>{\n// //   props.setProgress(10);\n// //   const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\n// //   setLoading(true)\n// //   let data = await fetch(url);\n// //   props.setProgress(30);\n// //   let parsedData = await data.json()\n// //   // console.log(parsedData);\n// //   props.setProgress(100);\n// //   setArticles(parsedData.articles)\n// //   setTotalResults(parsedData.totalResults)\n// //   setLoading(false)\n\n// //   props.setProgress(100);\n// // }\n// // Updatenews();\n// // useEffect(()=>{\n// //   Updatenews();\n// // }, [])\n\n// //  const HandlePrevClick= async () => {\n// //   // console.log(\"Previous\")\n// //   // let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page - 1}&pageSize=${props.pageSize}`;\n// //   // setState({loading: true})\n// //   // let data = await fetch(url)\n// //   // let parsedData = await data.json()\n// //   // // console.log(parsedData);\n\n// //   // setState({\n// //   //   page: page - 1,\n// //   //   articles: parsedData.articles,\n// //   //   loading: false\n// //   // })\n// //   setPage(page-1);\n// //   Updatenews()\n\n// // }\n\n// //  const  HandleNextClick= async () => {\n// //   // console.log(\"Next\")\n// //   // if (!(page+1 > Math.ceil(totalResults/props.pageSize))){\n\n// //   // let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page + 1}&pageSize=${props.pageSize}`;\n// //   // setState({loading: true})\n// //   // let data = await fetch(url)\n// //   // let parsedData = await data.json()\n// //   // // console.log(parsedData);\n\n// //   // setState({\n// //   //   page: page+1,\n// //   //   articles: parsedData.articles,\n// //   //  loading: false\n// //   // })}\n// //   setPage(page+1);\n// //   Updatenews()\n\n// // }\n\n// //  const fetchMoreData = async  () => {\n// // setPage(page+1)\n// // const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\n\n// //   let data = await fetch(url)\n// //   let parsedData = await data.json()\n// //   setArticles(articles.concat(parsedData.articles))\n// //   setTotalResults(parsedData.totalResults)\n// // };\n\n// //  return (\n// //   <>\n// //         <h2 className='d-flex justify-content-center tochangeheight'>NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines</h2>\n\n// //        {loading && <Spinner/>}\n// //         <InfiniteScroll\n// //           dataLength={articles.length}\n// //           next={fetchMoreData}\n// //           hasMore={articles.length !== totalResults}\n// //           loader = {<Spinner/>}\n// //         >\n// //           <div className=\"container\">\n// //           <div className=\"row\">\n\n// //   {articles.map((element) => {\n// //   if (element) {\n// //     return (\n// //       <div className=\"col-md-4 my-1\" key={element.url}>\n// //         <NewsItem\n// //           title={element.title ? element.title : \"\"}\n// //           description={element.description ? element.description : \"\"}\n// //           imageurl={element.urlToImage}\n// //           newsURL={element.url}\n// //           date={element.publishedAt}\n// //           author={element.author}\n// //           source={element.source.name}\n// //         />\n// //       </div>\n// //     );\n// //   }\n// // })}\n\n// //   </div>\n// //    </div>\n// //   </InfiniteScroll>\n// //   </>\n\n// //     )\n// //   }\n\n// // News.defaultProps = {\n// //   country: 'in',\n// //   pageSize: 8,\n// //   category : 'general'\n\n// // };\n\n// // News.propTypes = {\n// //   country: PropTypes.string,\n// //   pageSize: PropTypes.number,\n// //   category : PropTypes.string\n// // };\n\n// // export default News\n\n// // ChatpGPT Fixed Code\n// import React, { useEffect, useState } from 'react';\n// import NewsItem from './NewsItem';\n// import Spinner from './spinner';\n// import PropTypes from 'prop-types';\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n\n// const News = (props) => {\n//   const [articles, setArticles] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [page, setPage] = useState(1);\n//   const [totalResults, setTotalResults] = useState(0);\n\n//   const capitalizeFirstLetter = (string) => {\n//     return string.charAt(0).toUpperCase() + string.slice(1);\n//   };\n\n//   const Updatenews = async () => {\n//     props.setProgress(10);\n//     const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\n//     setLoading(true);\n//     let data = await fetch(url);\n//     props.setProgress(30);\n//     let parsedData = await data.json();\n//     props.setProgress(100);\n//     setArticles(parsedData.articles);\n//     setTotalResults(parsedData.totalResults);\n//     setLoading(false);\n//   };\n\n//   useEffect(() => {\n//     // Call Updatenews inside useEffect to prevent infinite renders.\n//     Updatenews();\n//   }, [page, props.country, props.category, props.pageSize]);\n\n//   const HandlePrevClick = async () => {\n//     setPage(page - 1);\n//   };\n\n//   const HandleNextClick = async () => {\n//     setPage(page + 1);\n//   };\n\n//   const fetchMoreData = async () => {\n//     const nextPage = page + 1;\n//     // You don't need to increment page here; it's already being updated via the HandleNextClick function.\n//     const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\n//     let data = await fetch(url);\n//     let parsedData = await data.json();\n//     setArticles(articles.concat(parsedData.articles));\n//     setTotalResults(parsedData.totalResults);\n//     setPage(nextPage);\n//   };\n\n//   return (\n//     <>\n//       <h2 className='d-flex justify-content-center tochangeheight'>\n//         NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines\n//       </h2>\n\n//       {loading && <Spinner />}\n//       <InfiniteScroll\n//         dataLength={articles.length}\n//         next={fetchMoreData}\n//         hasMore={articles.length !== totalResults}\n//         loader={<Spinner />}\n//       >\n//         <div className=\"container\">\n//           <div className=\"row\">\n//             {articles.map((element) => {\n//               if (element) {\n//                 return (\n//                   <div className=\"col-md-4 my-1\" key={element.url}>\n//                     <NewsItem\n//                       title={element.title ? element.title : \"\"}\n//                       description={element.description ? element.description : \"\"}\n//                       imageurl={element.urlToImage}\n//                       newsURL={element.url}\n//                       date={element.publishedAt}\n//                       author={element.author}\n//                       source={element.source.name}\n//                     />\n//                   </div>\n//                 );\n//               }\n//             })}\n//           </div>\n//         </div>\n//       </InfiniteScroll>\n//     </>\n//   );\n// };\n\n// News.defaultProps = {\n//   country: 'in',\n//   pageSize: 8,\n//   category: 'general',\n// };\n\n// News.propTypes = {\n//   country: PropTypes.string,\n//   pageSize: PropTypes.number,\n//   category: PropTypes.string,\n// };\n\n// export default News;\n\nconst News = props => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const updateNews = async () => {\n    props.setProgress(10);\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\n    setLoading(true);\n    let data = await fetch(url);\n    props.setProgress(30);\n    let parsedData = await data.json();\n    props.setProgress(70);\n    setArticles(parsedData.articles);\n    setTotalResults(parsedData.totalResults);\n    setLoading(false);\n    props.setProgress(100);\n  };\n  useEffect(() => {\n    document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\n    updateNews();\n    // eslint-disable-next-line\n  }, []);\n  const fetchMoreData = async () => {\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page + 1}&pageSize=${props.pageSize}`;\n    setPage(page + 1);\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    setArticles(articles.concat(parsedData.articles));\n    setTotalResults(parsedData.totalResults);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      style: {\n        margin: '35px 0px',\n        marginTop: '90px'\n      },\n      children: [\"NewsMonkey - Top \", capitalizeFirstLetter(props.category), \" Headlines\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: articles.length,\n      next: fetchMoreData,\n      hasMore: articles.length !== totalResults,\n      loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: articles.map(element => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(NewsItem, {\n                title: element.title ? element.title : \"\",\n                description: element.description ? element.description : \"\",\n                imageUrl: element.urlToImage,\n                newsUrl: element.url,\n                author: element.author,\n                date: element.publishedAt,\n                source: element.source.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 33\n              }, this)\n            }, element.url, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(News, \"DJGT5z9fcO00SGn/4yt1PHL84Ps=\");\n_c = News;\nNews.defaultProps = {\n  country: 'in',\n  pageSize: 8,\n  category: 'general'\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["News","props","_s","articles","setArticles","useState","loading","setLoading","page","setPage","totalResults","setTotalResults","capitalizeFirstLetter","string","charAt","toUpperCase","slice","updateNews","setProgress","url","country","category","apiKey","pageSize","data","fetch","parsedData","json","useEffect","document","title","fetchMoreData","concat","_jsxDEV","_Fragment","children","className","style","margin","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","Spinner","InfiniteScroll","dataLength","length","next","hasMore","loader","map","element","NewsItem","description","imageUrl","urlToImage","newsUrl","author","date","publishedAt","source","name","_c","defaultProps","propTypes","PropTypes","number","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/React Course/newsapp/src/Components/News.js"],"sourcesContent":["// // import React, { useEffect, useState } from 'react'\r\n\r\n// // import NewsItem from './NewsItem'\r\n// // import Spinner from './spinner';\r\n// // import PropTypes from 'prop-types'\r\n// // import InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n// // const News = (props)=> {\r\n// // const [articles, setArticles] = useState([])\r\n// // const [loading, setLoading] = useState(true)\r\n// // const [page, setPage] = useState(1)\r\n// // const [totalResults, setTotalResults] = useState(0)\r\n// // // document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\r\n\r\n\r\n\r\n// // const  capitalizeFirstLetter=(string)=>{\r\n// // return string.charAt(0).toUpperCase() + string.slice(1);\r\n// //   }\r\n  \r\n\r\n\r\n// // const Updatenews = async ()=>{\r\n// //   props.setProgress(10);\r\n// //   const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\r\n// //   setLoading(true)\r\n// //   let data = await fetch(url);\r\n// //   props.setProgress(30);\r\n// //   let parsedData = await data.json()\r\n// //   // console.log(parsedData);\r\n// //   props.setProgress(100);\r\n// //   setArticles(parsedData.articles)\r\n// //   setTotalResults(parsedData.totalResults)\r\n// //   setLoading(false)\r\n\r\n// //   props.setProgress(100);\r\n// // }\r\n// // Updatenews();\r\n// // useEffect(()=>{\r\n// //   Updatenews();\r\n// // }, [])\r\n\r\n\r\n\r\n\r\n\r\n// //  const HandlePrevClick= async () => {\r\n// //   // console.log(\"Previous\")\r\n// //   // let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page - 1}&pageSize=${props.pageSize}`;\r\n// //   // setState({loading: true})\r\n// //   // let data = await fetch(url)\r\n// //   // let parsedData = await data.json()\r\n// //   // // console.log(parsedData);\r\n\r\n// //   // setState({\r\n// //   //   page: page - 1,\r\n// //   //   articles: parsedData.articles,\r\n// //   //   loading: false\r\n// //   // })\r\n// //   setPage(page-1);\r\n// //   Updatenews()\r\n\r\n// // }\r\n\r\n\r\n\r\n// //  const  HandleNextClick= async () => {\r\n// //   // console.log(\"Next\")\r\n// //   // if (!(page+1 > Math.ceil(totalResults/props.pageSize))){\r\n\r\n// //   // let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page + 1}&pageSize=${props.pageSize}`;\r\n// //   // setState({loading: true})\r\n// //   // let data = await fetch(url)\r\n// //   // let parsedData = await data.json()\r\n// //   // // console.log(parsedData);\r\n\r\n// //   // setState({\r\n// //   //   page: page+1,\r\n// //   //   articles: parsedData.articles,\r\n// //   //  loading: false\r\n// //   // })}\r\n// //   setPage(page+1);\r\n// //   Updatenews()\r\n\r\n \r\n// // }\r\n\r\n// //  const fetchMoreData = async  () => {\r\n// // setPage(page+1)\r\n// // const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\r\n\r\n// //   let data = await fetch(url)\r\n// //   let parsedData = await data.json()\r\n// //   setArticles(articles.concat(parsedData.articles))\r\n// //   setTotalResults(parsedData.totalResults)\r\n// // };\r\n\r\n\r\n\r\n\r\n// //  return (\r\n// //   <>\r\n// //         <h2 className='d-flex justify-content-center tochangeheight'>NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines</h2>\r\n    \r\n// //        {loading && <Spinner/>}\r\n// //         <InfiniteScroll\r\n// //           dataLength={articles.length}\r\n// //           next={fetchMoreData}\r\n// //           hasMore={articles.length !== totalResults}\r\n// //           loader = {<Spinner/>}\r\n// //         >\r\n// //           <div className=\"container\">\r\n// //           <div className=\"row\">\r\n  \r\n// //   {articles.map((element) => {\r\n// //   if (element) {\r\n// //     return (\r\n// //       <div className=\"col-md-4 my-1\" key={element.url}>\r\n// //         <NewsItem\r\n// //           title={element.title ? element.title : \"\"}\r\n// //           description={element.description ? element.description : \"\"}\r\n// //           imageurl={element.urlToImage}\r\n// //           newsURL={element.url}\r\n// //           date={element.publishedAt}\r\n// //           author={element.author}\r\n// //           source={element.source.name}\r\n// //         />\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n// // })}\r\n\r\n// //   </div>\r\n// //    </div>\r\n// //   </InfiniteScroll>\r\n// //   </>\r\n   \r\n          \r\n      \r\n// //     )\r\n// //   }\r\n\r\n\r\n// // News.defaultProps = {\r\n// //   country: 'in',\r\n// //   pageSize: 8,\r\n// //   category : 'general'\r\n  \r\n// // };\r\n\r\n// // News.propTypes = {\r\n// //   country: PropTypes.string,\r\n// //   pageSize: PropTypes.number,\r\n// //   category : PropTypes.string\r\n// // };\r\n\r\n// // export default News\r\n\r\n\r\n\r\n// // ChatpGPT Fixed Code\r\n// import React, { useEffect, useState } from 'react';\r\n// import NewsItem from './NewsItem';\r\n// import Spinner from './spinner';\r\n// import PropTypes from 'prop-types';\r\n// import InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n// const News = (props) => {\r\n//   const [articles, setArticles] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [page, setPage] = useState(1);\r\n//   const [totalResults, setTotalResults] = useState(0);\r\n\r\n//   const capitalizeFirstLetter = (string) => {\r\n//     return string.charAt(0).toUpperCase() + string.slice(1);\r\n//   };\r\n\r\n//   const Updatenews = async () => {\r\n//     props.setProgress(10);\r\n//     const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\r\n//     setLoading(true);\r\n//     let data = await fetch(url);\r\n//     props.setProgress(30);\r\n//     let parsedData = await data.json();\r\n//     props.setProgress(100);\r\n//     setArticles(parsedData.articles);\r\n//     setTotalResults(parsedData.totalResults);\r\n//     setLoading(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     // Call Updatenews inside useEffect to prevent infinite renders.\r\n//     Updatenews();\r\n//   }, [page, props.country, props.category, props.pageSize]);\r\n\r\n//   const HandlePrevClick = async () => {\r\n//     setPage(page - 1);\r\n//   };\r\n\r\n//   const HandleNextClick = async () => {\r\n//     setPage(page + 1);\r\n//   };\r\n\r\n//   const fetchMoreData = async () => {\r\n//     const nextPage = page + 1;\r\n//     // You don't need to increment page here; it's already being updated via the HandleNextClick function.\r\n//     const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\r\n//     let data = await fetch(url);\r\n//     let parsedData = await data.json();\r\n//     setArticles(articles.concat(parsedData.articles));\r\n//     setTotalResults(parsedData.totalResults);\r\n//     setPage(nextPage);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <h2 className='d-flex justify-content-center tochangeheight'>\r\n//         NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines\r\n//       </h2>\r\n\r\n//       {loading && <Spinner />}\r\n//       <InfiniteScroll\r\n//         dataLength={articles.length}\r\n//         next={fetchMoreData}\r\n//         hasMore={articles.length !== totalResults}\r\n//         loader={<Spinner />}\r\n//       >\r\n//         <div className=\"container\">\r\n//           <div className=\"row\">\r\n//             {articles.map((element) => {\r\n//               if (element) {\r\n//                 return (\r\n//                   <div className=\"col-md-4 my-1\" key={element.url}>\r\n//                     <NewsItem\r\n//                       title={element.title ? element.title : \"\"}\r\n//                       description={element.description ? element.description : \"\"}\r\n//                       imageurl={element.urlToImage}\r\n//                       newsURL={element.url}\r\n//                       date={element.publishedAt}\r\n//                       author={element.author}\r\n//                       source={element.source.name}\r\n//                     />\r\n//                   </div>\r\n//                 );\r\n//               }\r\n//             })}\r\n//           </div>\r\n//         </div>\r\n//       </InfiniteScroll>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// News.defaultProps = {\r\n//   country: 'in',\r\n//   pageSize: 8,\r\n//   category: 'general',\r\n// };\r\n\r\n// News.propTypes = {\r\n//   country: PropTypes.string,\r\n//   pageSize: PropTypes.number,\r\n//   category: PropTypes.string,\r\n// };\r\n\r\n// export default News;\r\n\r\n\r\n\r\nconst News = (props)=>{\r\n    const [articles, setArticles] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [page, setPage] = useState(1)\r\n    const [totalResults, setTotalResults] = useState(0)\r\n    \r\n    const capitalizeFirstLetter = (string) => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    } \r\n\r\n    const updateNews = async ()=> {\r\n        props.setProgress(10);\r\n        const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`; \r\n        setLoading(true)\r\n        let data = await fetch(url);\r\n        props.setProgress(30);\r\n        let parsedData = await data.json()\r\n        props.setProgress(70);\r\n        setArticles(parsedData.articles)\r\n        setTotalResults(parsedData.totalResults)\r\n        setLoading(false)\r\n        props.setProgress(100);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\r\n        updateNews(); \r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n    const fetchMoreData = async () => {   \r\n        const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page+1}&pageSize=${props.pageSize}`;\r\n        setPage(page+1) \r\n        let data = await fetch(url);\r\n        let parsedData = await data.json()\r\n        setArticles(articles.concat(parsedData.articles))\r\n        setTotalResults(parsedData.totalResults)\r\n      };\r\n \r\n        return (\r\n            <>\r\n                <h1 className=\"text-center\" style={{ margin: '35px 0px', marginTop: '90px' }}>NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines</h1>\r\n                {loading && <Spinner />}\r\n                <InfiniteScroll\r\n                    dataLength={articles.length}\r\n                    next={fetchMoreData}\r\n                    hasMore={articles.length !== totalResults}\r\n                    loader={<Spinner/>}\r\n                > \r\n                    <div className=\"container\">\r\n                         \r\n                    <div className=\"row\">\r\n                        {articles.map((element) => {\r\n                            return <div className=\"col-md-4\" key={element.url}>\r\n                                <NewsItem title={element.title ? element.title : \"\"} description={element.description ? element.description : \"\"} imageUrl={element.urlToImage} newsUrl={element.url} author={element.author} date={element.publishedAt} source={element.source.name} />\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                    </div> \r\n                </InfiniteScroll>\r\n            </>\r\n        )\r\n    \r\n}\r\n\r\n\r\nNews.defaultProps = {\r\n    country: 'in',\r\n    pageSize: 8,\r\n    category: 'general',\r\n}\r\n\r\nNews.propTypes = {\r\n    country: PropTypes.string,\r\n    pageSize: PropTypes.number,\r\n    category: PropTypes.string,\r\n}\r\n\r\nexport default News"],"mappings":";;;;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,MAAMA,IAAI,GAAIC,KAAK,IAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMO,qBAAqB,GAAIC,MAAM,IAAK;IACtC,OAAOA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAW;IAC1BhB,KAAK,CAACiB,WAAW,CAAC,EAAE,CAAC;IACrB,MAAMC,GAAG,GAAI,gDAA+ClB,KAAK,CAACmB,OAAQ,aAAYnB,KAAK,CAACoB,QAAS,WAAUpB,KAAK,CAACqB,MAAO,SAAQd,IAAK,aAAYP,KAAK,CAACsB,QAAS,EAAC;IACrKhB,UAAU,CAAC,IAAI,CAAC;IAChB,IAAIiB,IAAI,GAAG,MAAMC,KAAK,CAACN,GAAG,CAAC;IAC3BlB,KAAK,CAACiB,WAAW,CAAC,EAAE,CAAC;IACrB,IAAIQ,UAAU,GAAG,MAAMF,IAAI,CAACG,IAAI,CAAC,CAAC;IAClC1B,KAAK,CAACiB,WAAW,CAAC,EAAE,CAAC;IACrBd,WAAW,CAACsB,UAAU,CAACvB,QAAQ,CAAC;IAChCQ,eAAe,CAACe,UAAU,CAAChB,YAAY,CAAC;IACxCH,UAAU,CAAC,KAAK,CAAC;IACjBN,KAAK,CAACiB,WAAW,CAAC,GAAG,CAAC;EAC1B,CAAC;EAEDU,SAAS,CAAC,MAAM;IACZC,QAAQ,CAACC,KAAK,GAAI,GAAElB,qBAAqB,CAACX,KAAK,CAACoB,QAAQ,CAAE,eAAc;IACxEJ,UAAU,CAAC,CAAC;IACZ;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMZ,GAAG,GAAI,gDAA+ClB,KAAK,CAACmB,OAAQ,aAAYnB,KAAK,CAACoB,QAAS,WAAUpB,KAAK,CAACqB,MAAO,SAAQd,IAAI,GAAC,CAAE,aAAYP,KAAK,CAACsB,QAAS,EAAC;IACvKd,OAAO,CAACD,IAAI,GAAC,CAAC,CAAC;IACf,IAAIgB,IAAI,GAAG,MAAMC,KAAK,CAACN,GAAG,CAAC;IAC3B,IAAIO,UAAU,GAAG,MAAMF,IAAI,CAACG,IAAI,CAAC,CAAC;IAClCvB,WAAW,CAACD,QAAQ,CAAC6B,MAAM,CAACN,UAAU,CAACvB,QAAQ,CAAC,CAAC;IACjDQ,eAAe,CAACe,UAAU,CAAChB,YAAY,CAAC;EAC1C,CAAC;EAEC,oBACIuB,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACIF,OAAA;MAAIG,SAAS,EAAC,aAAa;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,UAAU;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAJ,QAAA,GAAC,mBAAiB,EAACvB,qBAAqB,CAACX,KAAK,CAACoB,QAAQ,CAAC,EAAC,YAAU;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpJrC,OAAO,iBAAI2B,OAAA,CAACW,OAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvBV,OAAA,CAACY,cAAc;MACXC,UAAU,EAAE3C,QAAQ,CAAC4C,MAAO;MAC5BC,IAAI,EAAEjB,aAAc;MACpBkB,OAAO,EAAE9C,QAAQ,CAAC4C,MAAM,KAAKrC,YAAa;MAC1CwC,MAAM,eAAEjB,OAAA,CAACW,OAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAE;MAAAR,QAAA,eAEnBF,OAAA;QAAKG,SAAS,EAAC,WAAW;QAAAD,QAAA,eAE1BF,OAAA;UAAKG,SAAS,EAAC,KAAK;UAAAD,QAAA,EACfhC,QAAQ,CAACgD,GAAG,CAAEC,OAAO,IAAK;YACvB,oBAAOnB,OAAA;cAAKG,SAAS,EAAC,UAAU;cAAAD,QAAA,eAC5BF,OAAA,CAACoB,QAAQ;gBAACvB,KAAK,EAAEsB,OAAO,CAACtB,KAAK,GAAGsB,OAAO,CAACtB,KAAK,GAAG,EAAG;gBAACwB,WAAW,EAAEF,OAAO,CAACE,WAAW,GAAGF,OAAO,CAACE,WAAW,GAAG,EAAG;gBAACC,QAAQ,EAAEH,OAAO,CAACI,UAAW;gBAACC,OAAO,EAAEL,OAAO,CAACjC,GAAI;gBAACuC,MAAM,EAAEN,OAAO,CAACM,MAAO;gBAACC,IAAI,EAAEP,OAAO,CAACQ,WAAY;gBAACC,MAAM,EAAET,OAAO,CAACS,MAAM,CAACC;cAAK;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC,GADtNS,OAAO,CAACjC,GAAG;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAE5C,CAAC;UACV,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA,eACnB,CAAC;AAGf,CAAC;AAAAzC,EAAA,CAhEKF,IAAI;AAAA+D,EAAA,GAAJ/D,IAAI;AAmEVA,IAAI,CAACgE,YAAY,GAAG;EAChB5C,OAAO,EAAE,IAAI;EACbG,QAAQ,EAAE,CAAC;EACXF,QAAQ,EAAE;AACd,CAAC;AAEDrB,IAAI,CAACiE,SAAS,GAAG;EACb7C,OAAO,EAAE8C,SAAS,CAACrD,MAAM;EACzBU,QAAQ,EAAE2C,SAAS,CAACC,MAAM;EAC1B9C,QAAQ,EAAE6C,SAAS,CAACrD;AACxB,CAAC;AAED,eAAeb,IAAI;AAAA,IAAA+D,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}