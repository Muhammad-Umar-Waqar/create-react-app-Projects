{"ast":null,"code":"// import React, { useEffect, useState } from 'react'\n\n// import NewsItem from './NewsItem'\n// import Spinner from './spinner';\n// import PropTypes from 'prop-types'\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n\n// const News = (props)=> {\n// const [articles, setArticles] = useState([])\n// const [loading, setLoading] = useState(true)\n// const [page, setPage] = useState(1)\n// const [totalResults, setTotalResults] = useState(0)\n// // document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\n\n// const  capitalizeFirstLetter=(string)=>{\n// return string.charAt(0).toUpperCase() + string.slice(1);\n//   }\n\n// const Updatenews = async ()=>{\n//   props.setProgress(10);\n//   const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\n//   setLoading(true)\n//   let data = await fetch(url);\n//   props.setProgress(30);\n//   let parsedData = await data.json()\n//   // console.log(parsedData);\n//   props.setProgress(100);\n//   setArticles(parsedData.articles)\n//   setTotalResults(parsedData.totalResults)\n//   setLoading(false)\n\n//   props.setProgress(100);\n// }\n// Updatenews();\n// useEffect(()=>{\n//   Updatenews();\n// }, [])\n\n//  const HandlePrevClick= async () => {\n//   // console.log(\"Previous\")\n//   // let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page - 1}&pageSize=${props.pageSize}`;\n//   // setState({loading: true})\n//   // let data = await fetch(url)\n//   // let parsedData = await data.json()\n//   // // console.log(parsedData);\n\n//   // setState({\n//   //   page: page - 1,\n//   //   articles: parsedData.articles,\n//   //   loading: false\n//   // })\n//   setPage(page-1);\n//   Updatenews()\n\n// }\n\n//  const  HandleNextClick= async () => {\n//   // console.log(\"Next\")\n//   // if (!(page+1 > Math.ceil(totalResults/props.pageSize))){\n\n//   // let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page + 1}&pageSize=${props.pageSize}`;\n//   // setState({loading: true})\n//   // let data = await fetch(url)\n//   // let parsedData = await data.json()\n//   // // console.log(parsedData);\n\n//   // setState({\n//   //   page: page+1,\n//   //   articles: parsedData.articles,\n//   //  loading: false\n//   // })}\n//   setPage(page+1);\n//   Updatenews()\n\n// }\n\n//  const fetchMoreData = async  () => {\n// setPage(page+1)\n// const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\n\n//   let data = await fetch(url)\n//   let parsedData = await data.json()\n//   setArticles(articles.concat(parsedData.articles))\n//   setTotalResults(parsedData.totalResults)\n// };\n\n//  return (\n//   <>\n//         <h2 className='d-flex justify-content-center tochangeheight'>NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines</h2>\n\n//        {loading && <Spinner/>}\n//         <InfiniteScroll\n//           dataLength={articles.length}\n//           next={fetchMoreData}\n//           hasMore={articles.length !== totalResults}\n//           loader = {<Spinner/>}\n//         >\n//           <div className=\"container\">\n//           <div className=\"row\">\n\n//   {articles.map((element) => {\n//   if (element) {\n//     return (\n//       <div className=\"col-md-4 my-1\" key={element.url}>\n//         <NewsItem\n//           title={element.title ? element.title : \"\"}\n//           description={element.description ? element.description : \"\"}\n//           imageurl={element.urlToImage}\n//           newsURL={element.url}\n//           date={element.publishedAt}\n//           author={element.author}\n//           source={element.source.name}\n//         />\n//       </div>\n//     );\n//   }\n// })}\n\n//   </div>\n//    </div>\n//   </InfiniteScroll>\n//   </>\n\n//     )\n//   }\n\n// News.defaultProps = {\n//   country: 'in',\n//   pageSize: 8,\n//   category : 'general'\n\n// };\n\n// News.propTypes = {\n//   country: PropTypes.string,\n//   pageSize: PropTypes.number,\n//   category : PropTypes.string\n// };\n\n// export default News\n\n// ChatpGPT Fixed Code\n\n// import React, { useEffect, useState } from 'react';\n// import NewsItem from './NewsItem';\n// import Spinner from './spinner';\n// import PropTypes from 'prop-types';\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n\n// const News = (props) => {\n//   const [articles, setArticles] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [page, setPage] = useState(1);\n//   const [totalResults, setTotalResults] = useState(0);\n\n//   const capitalizeFirstLetter = (string) => {\n//     return string.charAt(0).toUpperCase() + string.slice(1);\n//   };\n\n//   const Updatenews = async () => {\n//     props.setProgress(10);\n//     const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\n//     setLoading(true);\n//     let data = await fetch(url);\n//     props.setProgress(30);\n//     let parsedData = await data.json();\n//     props.setProgress(100);\n//     setArticles(parsedData.articles);\n//     setTotalResults(parsedData.totalResults);\n//     setLoading(false);\n//   };\n\n//   useEffect(() => {\n//     // Call Updatenews inside useEffect to prevent infinite renders.\n//     Updatenews();\n//   }, [page, props.country, props.category, props.pageSize]);\n\n//   const HandlePrevClick = async () => {\n//     setPage(page - 1);\n//   };\n\n//   const HandleNextClick = async () => {\n//     setPage(page + 1);\n//   };\n\n//   const fetchMoreData = async () => {\n//     // You don't need to increment page here; it's already being updated via the HandleNextClick function.\n//     const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\n//     let data = await fetch(url);\n//     let parsedData = await data.json();\n//     setArticles(articles.concat(parsedData.articles));\n//     setTotalResults(parsedData.totalResults);\n//   };\n\n//   return (\n//     <>\n//       <h2 className='d-flex justify-content-center tochangeheight'>\n//         NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines\n//       </h2>\n\n//       {loading && <Spinner />}\n//       <InfiniteScroll\n//         dataLength={articles.length}\n//         next={fetchMoreData}\n//         hasMore={articles.length !== totalResults}\n//         loader={<Spinner />}\n//       >\n//         <div className=\"container\">\n//           <div className=\"row\">\n//             {articles.map((element) => {\n//               if (element) {\n//                 return (\n//                   <div className=\"col-md-4 my-1\" key={element.url}>\n//                     <NewsItem\n//                       title={element.title ? element.title : \"\"}\n//                       description={element.description ? element.description : \"\"}\n//                       imageurl={element.urlToImage}\n//                       newsURL={element.url}\n//                       date={element.publishedAt}\n//                       author={element.author}\n//                       source={element.source.name}\n//                     />\n//                   </div>\n//                 );\n//               }\n//             })}\n//           </div>\n//         </div>\n//       </InfiniteScroll>\n//     </>\n//   );\n// };\n\n// News.defaultProps = {\n//   country: 'in',\n//   pageSize: 8,\n//   category: 'general',\n// };\n\n// News.propTypes = {\n//   country: PropTypes.string,\n//   pageSize: PropTypes.number,\n//   category: PropTypes.string,\n// };\n\n// export default News;","map":{"version":3,"names":[],"sources":["C:/Users/hp/Desktop/React Course/newsapp/src/Components/News.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\r\n\r\n// import NewsItem from './NewsItem'\r\n// import Spinner from './spinner';\r\n// import PropTypes from 'prop-types'\r\n// import InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n// const News = (props)=> {\r\n// const [articles, setArticles] = useState([])\r\n// const [loading, setLoading] = useState(true)\r\n// const [page, setPage] = useState(1)\r\n// const [totalResults, setTotalResults] = useState(0)\r\n// // document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\r\n\r\n\r\n\r\n// const  capitalizeFirstLetter=(string)=>{\r\n// return string.charAt(0).toUpperCase() + string.slice(1);\r\n//   }\r\n  \r\n\r\n\r\n// const Updatenews = async ()=>{\r\n//   props.setProgress(10);\r\n//   const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\r\n//   setLoading(true)\r\n//   let data = await fetch(url);\r\n//   props.setProgress(30);\r\n//   let parsedData = await data.json()\r\n//   // console.log(parsedData);\r\n//   props.setProgress(100);\r\n//   setArticles(parsedData.articles)\r\n//   setTotalResults(parsedData.totalResults)\r\n//   setLoading(false)\r\n\r\n//   props.setProgress(100);\r\n// }\r\n// Updatenews();\r\n// useEffect(()=>{\r\n//   Updatenews();\r\n// }, [])\r\n\r\n\r\n\r\n\r\n\r\n//  const HandlePrevClick= async () => {\r\n//   // console.log(\"Previous\")\r\n//   // let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page - 1}&pageSize=${props.pageSize}`;\r\n//   // setState({loading: true})\r\n//   // let data = await fetch(url)\r\n//   // let parsedData = await data.json()\r\n//   // // console.log(parsedData);\r\n\r\n//   // setState({\r\n//   //   page: page - 1,\r\n//   //   articles: parsedData.articles,\r\n//   //   loading: false\r\n//   // })\r\n//   setPage(page-1);\r\n//   Updatenews()\r\n\r\n// }\r\n\r\n\r\n\r\n//  const  HandleNextClick= async () => {\r\n//   // console.log(\"Next\")\r\n//   // if (!(page+1 > Math.ceil(totalResults/props.pageSize))){\r\n\r\n//   // let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page + 1}&pageSize=${props.pageSize}`;\r\n//   // setState({loading: true})\r\n//   // let data = await fetch(url)\r\n//   // let parsedData = await data.json()\r\n//   // // console.log(parsedData);\r\n\r\n//   // setState({\r\n//   //   page: page+1,\r\n//   //   articles: parsedData.articles,\r\n//   //  loading: false\r\n//   // })}\r\n//   setPage(page+1);\r\n//   Updatenews()\r\n\r\n \r\n// }\r\n\r\n//  const fetchMoreData = async  () => {\r\n// setPage(page+1)\r\n// const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\r\n\r\n//   let data = await fetch(url)\r\n//   let parsedData = await data.json()\r\n//   setArticles(articles.concat(parsedData.articles))\r\n//   setTotalResults(parsedData.totalResults)\r\n// };\r\n\r\n\r\n\r\n\r\n//  return (\r\n//   <>\r\n//         <h2 className='d-flex justify-content-center tochangeheight'>NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines</h2>\r\n    \r\n//        {loading && <Spinner/>}\r\n//         <InfiniteScroll\r\n//           dataLength={articles.length}\r\n//           next={fetchMoreData}\r\n//           hasMore={articles.length !== totalResults}\r\n//           loader = {<Spinner/>}\r\n//         >\r\n//           <div className=\"container\">\r\n//           <div className=\"row\">\r\n  \r\n//   {articles.map((element) => {\r\n//   if (element) {\r\n//     return (\r\n//       <div className=\"col-md-4 my-1\" key={element.url}>\r\n//         <NewsItem\r\n//           title={element.title ? element.title : \"\"}\r\n//           description={element.description ? element.description : \"\"}\r\n//           imageurl={element.urlToImage}\r\n//           newsURL={element.url}\r\n//           date={element.publishedAt}\r\n//           author={element.author}\r\n//           source={element.source.name}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// })}\r\n\r\n//   </div>\r\n//    </div>\r\n//   </InfiniteScroll>\r\n//   </>\r\n   \r\n          \r\n      \r\n//     )\r\n//   }\r\n\r\n\r\n// News.defaultProps = {\r\n//   country: 'in',\r\n//   pageSize: 8,\r\n//   category : 'general'\r\n  \r\n// };\r\n\r\n// News.propTypes = {\r\n//   country: PropTypes.string,\r\n//   pageSize: PropTypes.number,\r\n//   category : PropTypes.string\r\n// };\r\n\r\n// export default News\r\n\r\n\r\n\r\n// ChatpGPT Fixed Code\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import NewsItem from './NewsItem';\r\n// import Spinner from './spinner';\r\n// import PropTypes from 'prop-types';\r\n// import InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n// const News = (props) => {\r\n//   const [articles, setArticles] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [page, setPage] = useState(1);\r\n//   const [totalResults, setTotalResults] = useState(0);\r\n\r\n//   const capitalizeFirstLetter = (string) => {\r\n//     return string.charAt(0).toUpperCase() + string.slice(1);\r\n//   };\r\n\r\n//   const Updatenews = async () => {\r\n//     props.setProgress(10);\r\n//     const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\r\n//     setLoading(true);\r\n//     let data = await fetch(url);\r\n//     props.setProgress(30);\r\n//     let parsedData = await data.json();\r\n//     props.setProgress(100);\r\n//     setArticles(parsedData.articles);\r\n//     setTotalResults(parsedData.totalResults);\r\n//     setLoading(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     // Call Updatenews inside useEffect to prevent infinite renders.\r\n//     Updatenews();\r\n//   }, [page, props.country, props.category, props.pageSize]);\r\n\r\n//   const HandlePrevClick = async () => {\r\n//     setPage(page - 1);\r\n//   };\r\n\r\n//   const HandleNextClick = async () => {\r\n//     setPage(page + 1);\r\n//   };\r\n\r\n//   const fetchMoreData = async () => {\r\n//     // You don't need to increment page here; it's already being updated via the HandleNextClick function.\r\n//     const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\r\n//     let data = await fetch(url);\r\n//     let parsedData = await data.json();\r\n//     setArticles(articles.concat(parsedData.articles));\r\n//     setTotalResults(parsedData.totalResults);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <h2 className='d-flex justify-content-center tochangeheight'>\r\n//         NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines\r\n//       </h2>\r\n\r\n//       {loading && <Spinner />}\r\n//       <InfiniteScroll\r\n//         dataLength={articles.length}\r\n//         next={fetchMoreData}\r\n//         hasMore={articles.length !== totalResults}\r\n//         loader={<Spinner />}\r\n//       >\r\n//         <div className=\"container\">\r\n//           <div className=\"row\">\r\n//             {articles.map((element) => {\r\n//               if (element) {\r\n//                 return (\r\n//                   <div className=\"col-md-4 my-1\" key={element.url}>\r\n//                     <NewsItem\r\n//                       title={element.title ? element.title : \"\"}\r\n//                       description={element.description ? element.description : \"\"}\r\n//                       imageurl={element.urlToImage}\r\n//                       newsURL={element.url}\r\n//                       date={element.publishedAt}\r\n//                       author={element.author}\r\n//                       source={element.source.name}\r\n//                     />\r\n//                   </div>\r\n//                 );\r\n//               }\r\n//             })}\r\n//           </div>\r\n//         </div>\r\n//       </InfiniteScroll>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// News.defaultProps = {\r\n//   country: 'in',\r\n//   pageSize: 8,\r\n//   category: 'general',\r\n// };\r\n\r\n// News.propTypes = {\r\n//   country: PropTypes.string,\r\n//   pageSize: PropTypes.number,\r\n//   category: PropTypes.string,\r\n// };\r\n\r\n// export default News;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}