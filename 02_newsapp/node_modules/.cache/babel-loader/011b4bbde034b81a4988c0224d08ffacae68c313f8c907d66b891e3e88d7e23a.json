{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\React Course\\\\newsapp\\\\src\\\\Components\\\\News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NewsItem from './NewsItem';\nimport Spinner from './spinner';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst capitalizeFirstLetter = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\nconst News = props => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\n  const Updatenews = async () => {\n    props.setProgress(10);\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\n    setLoading(true);\n    let data = await fetch(url);\n    props.setProgress(30);\n    let parsedData = await data.json();\n    // console.log(parsedData);\n    props.setProgress(100);\n    setArticles(parsedData.articles);\n    setTotalResults(parsedData.totalResults);\n    setLoading(false);\n    props.setProgress(100);\n  };\n  Updatenews();\n  useEffect(() => {\n    Updatenews();\n  }, []);\n  const HandlePrevClick = async () => {\n    // console.log(\"Previous\")\n    // let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page - 1}&pageSize=${props.pageSize}`;\n    // setState({loading: true})\n    // let data = await fetch(url)\n    // let parsedData = await data.json()\n    // // console.log(parsedData);\n\n    // setState({\n    //   page: page - 1,\n    //   articles: parsedData.articles,\n    //   loading: false\n    // })\n    setPage(page - 1);\n    Updatenews();\n  };\n  const HandleNextClick = async () => {\n    // console.log(\"Next\")\n    // if (!(page+1 > Math.ceil(totalResults/props.pageSize))){\n\n    // let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page + 1}&pageSize=${props.pageSize}`;\n    // setState({loading: true})\n    // let data = await fetch(url)\n    // let parsedData = await data.json()\n    // // console.log(parsedData);\n\n    // setState({\n    //   page: page+1,\n    //   articles: parsedData.articles,\n    //  loading: false\n    // })}\n    setPage(page + 1);\n    Updatenews();\n  };\n  const fetchMoreData = async () => {\n    setPage(page + 1);\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    setArticles(articles.concat(parsedData.articles));\n    setTotalResults(parsedData.totalResults);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"d-flex justify-content-center tochangeheight\",\n      children: [\"NewsMonkey - Top \", capitalizeFirstLetter(props.category), \" Headlines\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: articles.length,\n      next: fetchMoreData,\n      hasMore: articles.length !== totalResults,\n      loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: articles.map(element => {\n            if (element) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-4 my-1\",\n                children: /*#__PURE__*/_jsxDEV(NewsItem, {\n                  title: element.title ? element.title : \"\",\n                  description: element.description ? element.description : \"\",\n                  imageurl: element.urlToImage,\n                  newsURL: element.url,\n                  date: element.publishedAt,\n                  author: element.author,\n                  source: element.source.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 9\n                }, this)\n              }, element.url, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 7\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(News, \"DJGT5z9fcO00SGn/4yt1PHL84Ps=\");\n_c = News;\nNews.defaultProps = {\n  country: 'in',\n  pageSize: 8,\n  category: 'general'\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;\n\n// ChatpGPT Fixed Code\n\n// import React, { useEffect, useState } from 'react';\n// import NewsItem from './NewsItem';\n// import Spinner from './spinner';\n// import PropTypes from 'prop-types';\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n\n// const News = (props) => {\n//   const [articles, setArticles] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [page, setPage] = useState(1);\n//   const [totalResults, setTotalResults] = useState(0);\n\n//   const capitalizeFirstLetter = (string) => {\n//     return string.charAt(0).toUpperCase() + string.slice(1);\n//   };\n\n//   const Updatenews = async () => {\n//     props.setProgress(10);\n//     const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\n//     setLoading(true);\n//     let data = await fetch(url);\n//     props.setProgress(30);\n//     let parsedData = await data.json();\n//     props.setProgress(100);\n//     setArticles(parsedData.articles);\n//     setTotalResults(parsedData.totalResults);\n//     setLoading(false);\n//   };\n\n//   useEffect(() => {\n//     // Call Updatenews inside useEffect to prevent infinite renders.\n//     Updatenews();\n//   }, [page, props.country, props.category, props.pageSize]);\n\n//   const HandlePrevClick = async () => {\n//     setPage(page - 1);\n//   };\n\n//   const HandleNextClick = async () => {\n//     setPage(page + 1);\n//   };\n\n//   const fetchMoreData = async () => {\n//     // You don't need to increment page here; it's already being updated via the HandleNextClick function.\n//     const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\n//     let data = await fetch(url);\n//     let parsedData = await data.json();\n//     setArticles(articles.concat(parsedData.articles));\n//     setTotalResults(parsedData.totalResults);\n//   };\n\n//   return (\n//     <>\n//       <h2 className='d-flex justify-content-center tochangeheight'>\n//         NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines\n//       </h2>\n\n//       {loading && <Spinner />}\n//       <InfiniteScroll\n//         dataLength={articles.length}\n//         next={fetchMoreData}\n//         hasMore={articles.length !== totalResults}\n//         loader={<Spinner />}\n//       >\n//         <div className=\"container\">\n//           <div className=\"row\">\n//             {articles.map((element) => {\n//               if (element) {\n//                 return (\n//                   <div className=\"col-md-4 my-1\" key={element.url}>\n//                     <NewsItem\n//                       title={element.title ? element.title : \"\"}\n//                       description={element.description ? element.description : \"\"}\n//                       imageurl={element.urlToImage}\n//                       newsURL={element.url}\n//                       date={element.publishedAt}\n//                       author={element.author}\n//                       source={element.source.name}\n//                     />\n//                   </div>\n//                 );\n//               }\n//             })}\n//           </div>\n//         </div>\n//       </InfiniteScroll>\n//     </>\n//   );\n// };\n\n// News.defaultProps = {\n//   country: 'in',\n//   pageSize: 8,\n//   category: 'general',\n// };\n\n// News.propTypes = {\n//   country: PropTypes.string,\n//   pageSize: PropTypes.number,\n//   category: PropTypes.string,\n// };\n\n// export default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","NewsItem","Spinner","PropTypes","InfiniteScroll","jsxDEV","_jsxDEV","Fragment","_Fragment","capitalizeFirstLetter","string","charAt","toUpperCase","slice","News","props","_s","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResults","document","title","category","Updatenews","setProgress","url","country","pageSize","data","fetch","parsedData","json","HandlePrevClick","HandleNextClick","fetchMoreData","concat","children","className","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","length","next","hasMore","loader","map","element","description","imageurl","urlToImage","newsURL","date","publishedAt","author","source","name","_c","defaultProps","propTypes","number","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/React Course/newsapp/src/Components/News.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport NewsItem from './NewsItem'\r\nimport Spinner from './spinner';\r\nimport PropTypes from 'prop-types'\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst  capitalizeFirstLetter=(string)=>{\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n    \r\nconst News = (props)=> {\r\nconst [articles, setArticles] = useState([])\r\nconst [loading, setLoading] = useState(true)\r\nconst [page, setPage] = useState(1)\r\nconst [totalResults, setTotalResults] = useState(0)\r\ndocument.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Updatenews = async ()=>{\r\n  props.setProgress(10);\r\n  const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\r\n  setLoading(true)\r\n  let data = await fetch(url);\r\n  props.setProgress(30);\r\n  let parsedData = await data.json()\r\n  // console.log(parsedData);\r\n  props.setProgress(100);\r\n  setArticles(parsedData.articles)\r\n  setTotalResults(parsedData.totalResults)\r\n  setLoading(false)\r\n\r\n  props.setProgress(100);\r\n}\r\nUpdatenews();\r\nuseEffect(()=>{\r\n  Updatenews();\r\n}, [])\r\n\r\n\r\n\r\n\r\n\r\n const HandlePrevClick= async () => {\r\n  // console.log(\"Previous\")\r\n  // let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page - 1}&pageSize=${props.pageSize}`;\r\n  // setState({loading: true})\r\n  // let data = await fetch(url)\r\n  // let parsedData = await data.json()\r\n  // // console.log(parsedData);\r\n\r\n  // setState({\r\n  //   page: page - 1,\r\n  //   articles: parsedData.articles,\r\n  //   loading: false\r\n  // })\r\n  setPage(page-1);\r\n  Updatenews()\r\n\r\n}\r\n\r\n\r\n\r\n const  HandleNextClick= async () => {\r\n  // console.log(\"Next\")\r\n  // if (!(page+1 > Math.ceil(totalResults/props.pageSize))){\r\n\r\n  // let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page + 1}&pageSize=${props.pageSize}`;\r\n  // setState({loading: true})\r\n  // let data = await fetch(url)\r\n  // let parsedData = await data.json()\r\n  // // console.log(parsedData);\r\n\r\n  // setState({\r\n  //   page: page+1,\r\n  //   articles: parsedData.articles,\r\n  //  loading: false\r\n  // })}\r\n  setPage(page+1);\r\n  Updatenews()\r\n\r\n \r\n}\r\n\r\n const fetchMoreData = async  () => {\r\nsetPage(page+1)\r\nconst url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\r\n\r\n  let data = await fetch(url)\r\n  let parsedData = await data.json()\r\n  setArticles(articles.concat(parsedData.articles))\r\n  setTotalResults(parsedData.totalResults)\r\n};\r\n\r\n\r\n\r\n\r\n return (\r\n  <>\r\n        <h2 className='d-flex justify-content-center tochangeheight'>NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines</h2>\r\n    \r\n       {loading && <Spinner/>}\r\n        <InfiniteScroll\r\n          dataLength={articles.length}\r\n          next={fetchMoreData}\r\n          hasMore={articles.length !== totalResults}\r\n          loader = {<Spinner/>}\r\n        >\r\n          <div className=\"container\">\r\n          <div className=\"row\">\r\n  \r\n  {articles.map((element) => {\r\n  if (element) {\r\n    return (\r\n      <div className=\"col-md-4 my-1\" key={element.url}>\r\n        <NewsItem\r\n          title={element.title ? element.title : \"\"}\r\n          description={element.description ? element.description : \"\"}\r\n          imageurl={element.urlToImage}\r\n          newsURL={element.url}\r\n          date={element.publishedAt}\r\n          author={element.author}\r\n          source={element.source.name}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n})}\r\n\r\n  </div>\r\n   </div>\r\n  </InfiniteScroll>\r\n  </>\r\n   \r\n          \r\n      \r\n    )\r\n  }\r\n\r\n\r\nNews.defaultProps = {\r\n  country: 'in',\r\n  pageSize: 8,\r\n  category : 'general'\r\n  \r\n};\r\n\r\nNews.propTypes = {\r\n  country: PropTypes.string,\r\n  pageSize: PropTypes.number,\r\n  category : PropTypes.string\r\n};\r\n\r\nexport default News\r\n\r\n\r\n\r\n// ChatpGPT Fixed Code\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import NewsItem from './NewsItem';\r\n// import Spinner from './spinner';\r\n// import PropTypes from 'prop-types';\r\n// import InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n// const News = (props) => {\r\n//   const [articles, setArticles] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [page, setPage] = useState(1);\r\n//   const [totalResults, setTotalResults] = useState(0);\r\n\r\n//   const capitalizeFirstLetter = (string) => {\r\n//     return string.charAt(0).toUpperCase() + string.slice(1);\r\n//   };\r\n\r\n//   const Updatenews = async () => {\r\n//     props.setProgress(10);\r\n//     const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\r\n//     setLoading(true);\r\n//     let data = await fetch(url);\r\n//     props.setProgress(30);\r\n//     let parsedData = await data.json();\r\n//     props.setProgress(100);\r\n//     setArticles(parsedData.articles);\r\n//     setTotalResults(parsedData.totalResults);\r\n//     setLoading(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     // Call Updatenews inside useEffect to prevent infinite renders.\r\n//     Updatenews();\r\n//   }, [page, props.country, props.category, props.pageSize]);\r\n\r\n//   const HandlePrevClick = async () => {\r\n//     setPage(page - 1);\r\n//   };\r\n\r\n//   const HandleNextClick = async () => {\r\n//     setPage(page + 1);\r\n//   };\r\n\r\n//   const fetchMoreData = async () => {\r\n//     // You don't need to increment page here; it's already being updated via the HandleNextClick function.\r\n//     const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2ef83903e6c04587a1f923641fbfc546&page=${page}&pageSize=${props.pageSize}`;\r\n//     let data = await fetch(url);\r\n//     let parsedData = await data.json();\r\n//     setArticles(articles.concat(parsedData.articles));\r\n//     setTotalResults(parsedData.totalResults);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <h2 className='d-flex justify-content-center tochangeheight'>\r\n//         NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines\r\n//       </h2>\r\n\r\n//       {loading && <Spinner />}\r\n//       <InfiniteScroll\r\n//         dataLength={articles.length}\r\n//         next={fetchMoreData}\r\n//         hasMore={articles.length !== totalResults}\r\n//         loader={<Spinner />}\r\n//       >\r\n//         <div className=\"container\">\r\n//           <div className=\"row\">\r\n//             {articles.map((element) => {\r\n//               if (element) {\r\n//                 return (\r\n//                   <div className=\"col-md-4 my-1\" key={element.url}>\r\n//                     <NewsItem\r\n//                       title={element.title ? element.title : \"\"}\r\n//                       description={element.description ? element.description : \"\"}\r\n//                       imageurl={element.urlToImage}\r\n//                       newsURL={element.url}\r\n//                       date={element.publishedAt}\r\n//                       author={element.author}\r\n//                       source={element.source.name}\r\n//                     />\r\n//                   </div>\r\n//                 );\r\n//               }\r\n//             })}\r\n//           </div>\r\n//         </div>\r\n//       </InfiniteScroll>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// News.defaultProps = {\r\n//   country: 'in',\r\n//   pageSize: 8,\r\n//   category: 'general',\r\n// };\r\n\r\n// News.propTypes = {\r\n//   country: PropTypes.string,\r\n//   pageSize: PropTypes.number,\r\n//   category: PropTypes.string,\r\n// };\r\n\r\n// export default News;\r\n"],"mappings":"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;AAKH,CAAC;AAAA9B,EAAA,CAlIGF,IAAI;AAAAiD,EAAA,GAAJjD,IAAI;AAqIVA,IAAI,CAACkD,YAAY,GAAG;EAClBjC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,CAAC;EACXL,QAAQ,EAAG;AAEb,CAAC;AAEDb,IAAI,CAACmD,SAAS,GAAG;EACflC,OAAO,EAAE5B,SAAS,CAACO,MAAM;EACzBsB,QAAQ,EAAE7B,SAAS,CAAC+D,MAAM;EAC1BvC,QAAQ,EAAGxB,SAAS,CAACO;AACvB,CAAC;AAED,eAAeI,IAAI;;AAInB;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAiD,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}