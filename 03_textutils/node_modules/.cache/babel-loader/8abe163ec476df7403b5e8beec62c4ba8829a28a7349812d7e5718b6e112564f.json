{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\React Course\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport React, { useState } from 'react';\nimport Alert from \"./components/Alert\";\nimport TextForm from \"./components/TextForm\";\n\n// let name = \"Umar\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); //Whether Dark Mode is enabled or not \n  const [alert, setAlert] = usestate(null);\n  const showAlert = (message, type) => {\n    set;\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = \"#042743\";\n      setAlert(\"Dark mode has been Enabled\", \"Success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      setAlert(\"Light mode has been Enabled\", \"Success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      aboutText: \"About Us\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: \"Hi this is an Alert Box And we are alerting you\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        mode: mode,\n        heading: \"Enter Your Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"t02OGizjI0Uh770cQ66YY915MSs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","React","useState","Alert","TextForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","usestate","showAlert","message","type","set","toggleMode","document","body","style","backgroundColor","children","title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/React Course/textutils/src/App.js"],"sourcesContent":["// import logo from \"./logo.svg\";\nimport \"./App.css\"\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport React, {useState} from 'react';\nimport Alert from \"./components/Alert\";\nimport TextForm from \"./components/TextForm\"\n\n// let name = \"Umar\"\n\n\n\nfunction App() {\n  const [mode, setMode ] = useState('light'); //Whether Dark Mode is enabled or not \n  const [alert, setAlert] = usestate(null);\n\n  const showAlert = (message, type)=>{\n    set\n\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = \"#042743\"\n      setAlert(\"Dark mode has been Enabled\", \"Success\")\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = \"white\";\n      setAlert(\"Light mode has been Enabled\", \"Success\")\n    }\n  }\n\n  return (\n    <>\n<Navbar title=\"TextUtils\" aboutText = \"About Us\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert=\"Hi this is an Alert Box And we are alerting you\"/>\n<div className=\"container\"><TextForm mode={mode} heading=\"Enter Your Text\"/></div>\n{/* <About></About> */}\n  </>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":";;AAAA;AACA,OAAO,WAAW;AAClB;AACA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAE,GAAGV,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMC,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAG;IACjCC,GAAG;EAEL,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGT,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CV,QAAQ,CAAC,4BAA4B,EAAE,SAAS,CAAC;IACnD,CAAC,MACG;MACFF,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CV,QAAQ,CAAC,6BAA6B,EAAE,SAAS,CAAC;IACpD;EACF,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACJnB,OAAA,CAACN,MAAM;MAAC0B,KAAK,EAAC,WAAW;MAACC,SAAS,EAAG,UAAU;MAAChB,IAAI,EAAEA,IAAK;MAACS,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtFzB,OAAA,CAACH,KAAK;MAACU,KAAK,EAAC;IAAiD;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChEzB,OAAA;MAAK0B,SAAS,EAAC,WAAW;MAAAP,QAAA,eAACnB,OAAA,CAACF,QAAQ;QAACO,IAAI,EAAEA,IAAK;QAACsB,OAAO,EAAC;MAAiB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eAE9E,CAAC;AAEL;AAACrB,EAAA,CA9BQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}